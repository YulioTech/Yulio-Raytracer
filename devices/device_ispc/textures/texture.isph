// ======================================================================== //
// Copyright 2009-2013 Intel Corporation                                    //
//                                                                          //
// Licensed under the Apache License, Version 2.0 (the "License");          //
// you may not use this file except in compliance with the License.         //
// You may obtain a copy of the License at                                  //
//                                                                          //
//     http://www.apache.org/licenses/LICENSE-2.0                           //
//                                                                          //
// Unless required by applicable law or agreed to in writing, software      //
// distributed under the License is distributed on an "AS IS" BASIS,        //
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. //
// See the License for the specific language governing permissions and      //
// limitations under the License.                                           //
// ======================================================================== //

#pragma once

#include "default.isph"

struct Texture;

typedef varying vec3f (*Texture__get)(const uniform Texture *uniform this, const varying vec2f& p);

struct Texture 
{
  RefCount base;
  Texture__get get;
};

inline void Texture__Destructor(uniform RefCount* uniform this) {
  LOG(print("Texture__Destructor\n"));
  RefCount__Destructor(this);
}

inline void Texture__Constructor(uniform Texture* uniform this,
                                 uniform DestructorFunc destructor,
                                 uniform Texture__get get)
{
  LOG(print("Texture__Constructor\n"));
  RefCount__Constructor(&this->base,destructor);
  this->get = get;
}
