// ======================================================================== //
// Copyright 2009-2013 Intel Corporation                                    //
//                                                                          //
// Licensed under the Apache License, Version 2.0 (the "License");          //
// you may not use this file except in compliance with the License.         //
// You may obtain a copy of the License at                                  //
//                                                                          //
//     http://www.apache.org/licenses/LICENSE-2.0                           //
//                                                                          //
// Unless required by applicable law or agreed to in writing, software      //
// distributed under the License is distributed on an "AS IS" BASIS,        //
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. //
// See the License for the specific language governing permissions and      //
// limitations under the License.                                           //
// ======================================================================== //

#pragma once

#include "default.isph"

struct ToneMapper;

typedef varying vec3f (*FunToneMap)(const uniform ToneMapper *uniform this, 
                                    const varying vec3f v, 
                                    const varying int x, const varying int y, const uniform vec2ui size);

struct ToneMapper 
{
  RefCount base;
  FunToneMap toneMap;
};

inline void ToneMapper__Destructor(uniform RefCount* uniform this) {
  LOG(print("ToneMapper__Destructor\n"));
  RefCount__Destructor(this);
}

inline void ToneMapper__Constructor(uniform ToneMapper* uniform this, 
                                    uniform DestructorFunc destructor, 
                                    uniform FunToneMap toneMap) 
{
  LOG(print("ToneMapper__Constructor\n"));
  RefCount__Constructor(&this->base,destructor);
  this->toneMap = toneMap;
}
